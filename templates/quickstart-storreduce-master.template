{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "(qs-1nm7e113k) StorReduce, License: Apache 2.0(Please do not remove) September, 14, 2017",
    "Metadata": {
        "AWS::CloudFormation::Interface": {
            "ParameterGroups": [{
                "Label": {
                    "default": "StorReduce Configuration"
                },
                "Parameters": [
                    "StorReducePassword",
                    "NumSRRHosts",
                    "ShardsNum",
                    "ReplicaShardsNum",
                    "InstanceType",
                    "MonitorInstanceType",
                    "BucketName",
                    "StorReduceLicense",
                    "StorReduceHostName"
                ]
            },
            {
                "Label": {
                    "default": "VPC Network Configuration"
                },
                "Parameters": [
                    "NumberOfAZs",
                    "AvailabilityZones",
                    "RemoteAccessCIDR",
                    "VPCCIDR",
                    "PrivateSubnet1ACIDR",
                    "PrivateSubnet2ACIDR",
                    "PrivateSubnet3ACIDR",
                    "PrivateSubnet4ACIDR",
                    "PublicSubnet1CIDR",
                    "PublicSubnet2CIDR",
                    "PublicSubnet3CIDR",
                    "PublicSubnet4CIDR"
                ]
            },
            {
                "Label": {
                    "default": "Amazon EC2 Configuration"
                },
                "Parameters": [
                    "KeyPairName"
                ]
            },
            {
                "Label": {
                    "default": "Linux Bastion Configuration"
                },
                "Parameters": [
                    "NumBastionHosts",
                    "BastionAMIOS",
                    "BastionInstanceType"
                ]
            },
            {
                "Label": {
                    "default": "AWS Quick Start Configuration"
                },
                "Parameters": [
                    "QSS3BucketName",
                    "QSS3KeyPrefix"
                ]
            }
            ],
            "ParameterLabels": {
                "StorReducePassword": {
                    "default": "StorReduce Password"
                },
                "ShardsNum": {
                    "default": "Number of Shards"
                },
                "ReplicaShardsNum": {
                    "default": "Number of Replica Shards"
                },
                "StorReduceHostName": {
                    "default": "StorReduce Hostname"
                },
                "StorReduceLicense": {
                    "default": "StorReduce license"
                },
                "NumSRRHosts": {
                    "default": "Number of StorReduce servers"
                },
                "AvailabilityZones": {
                    "default": "Availability Zones"
                },
                "BastionAMIOS": {
                    "default": "Bastion AMI Operating System"
                },
                "BastionInstanceType": {
                    "default": "Bastion Instance Type"
                },
                "KeyPairName": {
                    "default": "Key Pair Name"
                },
                "InstanceType": {
                    "default": "Instance Type"
                },
                "MonitorInstanceType": {
                    "default": "Monitor Instance Type"
                },
                "BucketName": {
                    "default": "Bucket Name"
                },
                "NumberOfAZs": {
                    "default": "Number of Availability Zones"
                },
                "NumBastionHosts": {
                    "default": "Number of Bastion Hosts"
                },
                "PrivateSubnet1ACIDR": {
                    "default": "Private Subnet 1 CIDR"
                },
                "PrivateSubnet2ACIDR": {
                    "default": "Private Subnet 2 CIDR"
                },
                "PrivateSubnet3ACIDR": {
                    "default": "Private Subnet 3 CIDR"
                },
                "PrivateSubnet4ACIDR": {
                    "default": "Private Subnet 4 CIDR"
                },
                "PublicSubnet1CIDR": {
                    "default": "Public Subnet 1 CIDR"
                },
                "PublicSubnet2CIDR": {
                    "default": "Public Subnet 2 CIDR"
                },
                "PublicSubnet3CIDR": {
                    "default": "Public Subnet 3 CIDR"
                },
                "PublicSubnet4CIDR": {
                    "default": "Public Subnet 4 CIDR"
                },
                "QSS3BucketName": {
                    "default": "Quick Start S3 Bucket Name"
                },
                "QSS3KeyPrefix": {
                    "default": "Quick Start S3 Key Prefix"
                },
                "RemoteAccessCIDR": {
                    "default": "External Allowed Access CIDR"
                },
                "VPCCIDR": {
                    "default": "VPC CIDR"
                }
            }
        }
    },
    "Parameters": {
        "InstanceType": {
            "Description": "StorReduce EC2 instance type",
            "Type": "String",
            "Default": "i3.2xlarge",
            "AllowedValues": [
                "i3.large",
                "i3.xlarge",
                "i3.2xlarge",
                "i3.4xlarge",
                "i3.8xlarge",
                "i3.16xlarge",
                "i2.xlarge",
                "i2.2xlarge",
                "i2.4xlarge",
                "c3.large",
                "c3.xlarge",
                "c3.2xlarge",
                "c3.4xlarge",
                "c3.8xlarge"
            ],
            "ConstraintDescription": "must be a valid EC2 instance type."
        },
        "MonitorInstanceType": {
            "Description": "Monitor EC2 instance type",
            "Type": "String",
            "Default": "i3.large",
            "AllowedValues": [
                "i3.large",
                "i3.xlarge",
                "i3.2xlarge",
                "i3.4xlarge",
                "i3.8xlarge",
                "i3.16xlarge",
                "i2.xlarge",
                "i2.2xlarge",
                "i2.4xlarge",
                "c3.large",
                "c3.xlarge",
                "c3.2xlarge",
                "c3.4xlarge",
                "c3.8xlarge"
            ],
            "ConstraintDescription": "must be a valid EC2 instance type."
        },
        "BucketName": {
            "AllowedPattern": "^[0-9a-zA-Z]+([0-9a-zA-Z\\-]*[0-9a-zA-Z])*$",
            "ConstraintDescription": "bucket name can include numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen (-).",
            "Description": "The bucket to which StorReduce will store data. This should be a unique name, not an existing bucket as a new bucket will be created",
            "Type": "String"
        },
        "StorReduceLicense": {
            "Description": "A valid StorReduce license",
            "ConstraintDescription": "Must be a current and valid StorReduce license.",
            "Type": "String",
            "Default": ""
        },
        "StorReducePassword": {
            "Description": "The password for the StorReduce admin root user. This password is used to configure the StorReduce admin web interface and admin account for Grafana on the StorReduce Monitor server. StorReduce Monitor access to Elasticsearch and Kibana are also secured using Basic Auth against the StorReduce user management system.",
            "NoEcho": "True",
            "Type": "String"
        },
        "ShardsNum": {
            "Description": "The number of shards to use for StorReduce. Set to 0 for automatic configuration (i.e. 8 * number of servers)",
            "Type": "Number",
            "Default": 0,
            "MinValue": 0
        },
        "ReplicaShardsNum": {
            "Description": "The number of replica shards to use for the StorReduce cluster. Replicas create redundancy for higher resiliency but will result in using more SSD space and higher IOPS. Usage will be scaled by a factor of (1 + # of replicas)",
            "Type": "Number",
            "Default": 1,
            "MinValue": 0
        },
        "StorReduceHostName": {
            "Description": "The hostname to be used to address StorReduce. Objects stored on StorReduce will be addressed http://hostname/bucket/key or http://bucket.hostname/key. StorReduce settings will automatically be configured to add the AWS internal DNS values of the instances within the VPC and the AWS default public DNS name of the load balancer. This field can be populated as a comma-separated list of other DNS names corresponding to aliases for the load balancer, or else left blank",
            "Type": "String"
        },
        "AvailabilityZones": {
            "Description": "List of Availability Zones to use for the subnets in the VPC.",
            "Type": "List<AWS::EC2::AvailabilityZone::Name>"
        },
        "BastionAMIOS": {
            "AllowedValues": [
                "Amazon-Linux-HVM",
                "CentOS-7-HVM",
                "Ubuntu-Server-14.04-LTS-HVM",
                "Ubuntu-Server-16.04-LTS-HVM"
            ],
            "Default": "Amazon-Linux-HVM",
            "Description": "The Linux distribution for the AMI to be used for the bastion instances",
            "Type": "String"
        },
        "BastionInstanceType": {
            "Description": "Amazon EC2 instance type for the bastion instances",
            "Type": "String",
            "Default": "t2.micro",
            "AllowedValues": [
                "t2.nano",
                "t2.micro",
                "t2.small",
                "t2.medium",
                "t2.large",
                "m3.large",
                "m3.xlarge",
                "m3.2xlarge",
                "m4.large",
                "m4.xlarge",
                "m4.2xlarge",
                "m4.4xlarge"
            ]
        },
        "KeyPairName": {
            "Description": "Public/private key pairs allow you to securely connect to your instance after it launches",
            "Type": "AWS::EC2::KeyPair::KeyName"
        },
        "NumBastionHosts": {
            "AllowedValues": [
                "1",
                "2",
                "3",
                "4"
            ],
            "Default": "1",
            "Description": "The number of bastion hosts to provision. You can choose 1-4 hosts. A Bastion host is a server fortified for security that is in the public subnet/DMZ that permits ssh access to servers in private areas of the network",
            "Type": "String"
        },
        "QSS3BucketName": {
            "AllowedPattern": "^[0-9a-zA-Z]+([0-9a-zA-Z\\-]*[0-9a-zA-Z])*$",
            "ConstraintDescription": "Quick Start bucket name can include numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen (-).",
            "Default": "aws-quickstart",
            "Description": "S3 bucket name for the Quick Start assets. Quick Start bucket name can include numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen (-)",
            "Type": "String"
        },
        "QSS3KeyPrefix": {
            "AllowedPattern": "^[0-9a-zA-Z-/]*$",
            "ConstraintDescription": "Quick Start key prefix can include numbers, lowercase letters, uppercase letters, hyphens (-), and forward slash (/).",
            "Default": "quickstart-storreduce/",
            "Description": "S3 key prefix for the Quick Start assets. Quick Start key prefix can include numbers, lowercase letters, uppercase letters, hyphens (-), and forward slash (/)",
            "Type": "String"
        },
        "RemoteAccessCIDR": {
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/([0-9]|[1-2][0-9]|3[0-2]))$",
            "ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/x",
            "Description": "Allowed CIDR block for bastion, StorReduce Monitor and load balancer access",
            "Type": "String"
        },
        "VPCCIDR": {
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$",
            "ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/16-28",
            "Default": "10.0.0.0/16",
            "Description": "CIDR Block for the VPC",
            "Type": "String"
        },
        "NumberOfAZs": {
            "AllowedValues": [
                "2",
                "3",
                "4"
            ],
            "Default": "3",
            "Description": "Number of Availability Zones to use in the VPC. This must match your selections in the list of Availability Zones parameter",
            "Type": "String"
        },
        "PrivateSubnet1ACIDR": {
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$",
            "ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/16-28",
            "Default": "10.0.0.0/19",
            "Description": "CIDR block for private subnet 1A located in Availability Zone 1",
            "Type": "String"
        },
        "PrivateSubnet2ACIDR": {
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$",
            "ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/16-28",
            "Default": "10.0.32.0/19",
            "Description": "CIDR block for private subnet 2A located in Availability Zone 2",
            "Type": "String"
        },
        "PrivateSubnet3ACIDR": {
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$",
            "ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/16-28",
            "Default": "10.0.64.0/19",
            "Description": "CIDR block for private subnet 3A located in Availability Zone 3",
            "Type": "String"
        },
        "PrivateSubnet4ACIDR": {
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$",
            "ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/16-28",
            "Default": "10.0.96.0/19",
            "Description": "CIDR block for private subnet 4A located in Availability Zone 4",
            "Type": "String"
        },
        "PublicSubnet1CIDR": {
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$",
            "ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/16-28",
            "Default": "10.0.128.0/20",
            "Description": "CIDR block for the public DMZ subnet 1 located in Availability Zone 1",
            "Type": "String"
        },
        "PublicSubnet2CIDR": {
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$",
            "ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/16-28",
            "Default": "10.0.144.0/20",
            "Description": "CIDR block for the public DMZ subnet 2 located in Availability Zone 2",
            "Type": "String"
        },
        "PublicSubnet3CIDR": {
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$",
            "ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/16-28",
            "Default": "10.0.160.0/20",
            "Description": "CIDR block for the public DMZ subnet 3 located in Availability Zone 3",
            "Type": "String"
        },
        "PublicSubnet4CIDR": {
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$",
            "ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/16-28",
            "Default": "10.0.176.0/20",
            "Description": "CIDR block for the public DMZ subnet 4 located in Availability Zone 4",
            "Type": "String"
        },
        "NumSRRHosts": {
            "AllowedValues": [
                3,
                5,
                7,
                9,
                11,
                13,
                15,
                17,
                19,
                21,
                23,
                25,
                27,
                29,
                31
            ],
            "Description": "The number of StorReduce hosts to configure",
            "MaxValue": 31,
            "MinValue": 3,
            "Default": 3,
            "Type": "Number",
            "ConstraintDescription": "Number of StorReduce hosts must be an odd number between 3 and 31."
        }
    },
    "Rules": {},
    "Conditions": {
        "3AZCondition": {
            "Fn::Or": [{
                "Fn::Equals": [{
                    "Ref": "NumberOfAZs"
                },
                "3"
                ]
            },
            {
                "Condition": "4AZCondition"
            }
            ]
        },
        "4AZCondition": {
            "Fn::Equals": [{
                "Ref": "NumberOfAZs"
            },
            "4"
            ]
        },
        "GovCloudCondition": {
            "Fn::Equals": [{
                "Ref": "AWS::Region"
            },
            "us-gov-west-1"
            ]
        }
    },
    "Resources": {
        "VPCStack": {
            "Type": "AWS::CloudFormation::Stack",
            "Properties": {
                "TemplateURL": {
                    "Fn::Sub": [
                        "https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}submodules/quickstart-aws-vpc/templates/aws-vpc.template",
                        {
                            "QSS3Region": {
                                "Fn::If": [
                                    "GovCloudCondition",
                                    "s3-us-gov-west-1",
                                    "s3"
                                ]
                            }
                        }
                    ]
                },
                "Parameters": {
                    "AvailabilityZones": {
                        "Fn::Join": [
                            ",", {
                                "Ref": "AvailabilityZones"
                            }
                        ]
                    },
                    "KeyPairName": {
                        "Ref": "KeyPairName"
                    },

                    "PrivateSubnet1ACIDR": {
                        "Ref": "PrivateSubnet1ACIDR"
                    },
                    "PrivateSubnet2ACIDR": {
                        "Ref": "PrivateSubnet2ACIDR"
                    },
                    "PrivateSubnet3ACIDR": {
                        "Ref": "PrivateSubnet3ACIDR"
                    },
                    "PrivateSubnet4ACIDR": {
                        "Ref": "PrivateSubnet4ACIDR"
                    },
                    "PublicSubnet1CIDR": {
                        "Ref": "PublicSubnet1CIDR"
                    },
                    "PublicSubnet2CIDR": {
                        "Ref": "PublicSubnet2CIDR"
                    },
                    "PublicSubnet3CIDR": {
                        "Ref": "PublicSubnet3CIDR"
                    },
                    "PublicSubnet4CIDR": {
                        "Ref": "PublicSubnet4CIDR"
                    },
                    "NumberOfAZs": {
                        "Ref": "NumberOfAZs"
                    },
                    "VPCCIDR": {
                        "Ref": "VPCCIDR"
                    }
                }
            }
        },
        "BastionStack": {
            "DependsOn": "VPCStack",
            "Type": "AWS::CloudFormation::Stack",
            "Properties": {
                "TemplateURL": {
                    "Fn::Sub": [
                        "https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}submodules/quickstart-linux-bastion/templates/linux-bastion.template",
                        {
                            "QSS3Region": {
                                "Fn::If": [
                                    "GovCloudCondition",
                                    "s3-us-gov-west-1",
                                    "s3"
                                ]
                            }
                        }
                    ]
                },
                "Parameters": {
                    "BastionAMIOS": {
                        "Ref": "BastionAMIOS"
                    },
                    "BastionInstanceType": {
                        "Ref": "BastionInstanceType"
                    },
                    "EnableBanner": "false",
                    "EnableTCPForwarding": "false",
                    "EnableX11Forwarding": "false",
                    "KeyPairName": {
                        "Ref": "KeyPairName"
                    },
                    "NumBastionHosts": {
                        "Ref": "NumBastionHosts"
                    },
                    "PublicSubnet1ID": {
                        "Fn::GetAtt": [
                            "VPCStack",
                            "Outputs.PublicSubnet1ID"
                        ]
                    },
                    "PublicSubnet2ID": {
                        "Fn::GetAtt": [
                            "VPCStack",
                            "Outputs.PublicSubnet2ID"
                        ]
                    },
                    "RemoteAccessCIDR": {
                        "Ref": "RemoteAccessCIDR"
                    },
                    "VPCID": {
                        "Fn::GetAtt": [
                            "VPCStack",
                            "Outputs.VPCID"
                        ]
                    }
                }
            }
        },
        "SrrGroup": {
            "DependsOn": "VPCStack",
            "Type": "AWS::CloudFormation::Stack",
            "Properties": {
                "TemplateURL": {
                    "Fn::Sub": [
                        "https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}templates/storreduce-group-az${NumberOfAZs}.template",
                        {
                            "QSS3Region": {
                                "Fn::If": [
                                    "GovCloudCondition",
                                    "s3-us-gov-west-1",
                                    "s3"
                                ]
                            }
                        }
                    ]
                },
                "Parameters": {
                    "RemoteAccessCIDR": {
                        "Ref": "RemoteAccessCIDR"
                    },
                    "ReplicaShardsNum": {
                        "Ref": "ReplicaShardsNum"
                    },
                    "StorReduceHostName": {
                        "Ref": "StorReduceHostName"
                    },
                    "ShardsNum": {
                        "Ref": "ShardsNum"
                    },
                    "VPCCIDR": {
                        "Ref": "VPCCIDR"
                    },
                    "VpcId": {
                        "Fn::GetAtt": [
                            "VPCStack",
                            "Outputs.VPCID"
                        ]
                    },
                    "QSS3BucketName": {
                        "Ref": "QSS3BucketName"
                    },
                    "QSS3KeyPrefix": {
                        "Ref": "QSS3KeyPrefix"
                    },
                    "StorReducePassword": {
                        "Ref": "StorReducePassword"
                    },
                    "KeyPairName": {
                        "Ref": "KeyPairName"
                    },
                    "InstanceType": {
                        "Ref": "InstanceType"
                    },
                    "MonitorInstanceType": {
                        "Ref": "MonitorInstanceType"
                    },
                    "BucketName": {
                        "Ref": "BucketName"
                    },
                    "PrivateSubnetsToSpan": {
                        "Fn::Join": [
                            ",", [{
                                "Fn::GetAtt": [
                                    "VPCStack",
                                    "Outputs.PrivateSubnet1AID"
                                ]
                            },
                            {
                                "Fn::GetAtt": [
                                    "VPCStack",
                                    "Outputs.PrivateSubnet2AID"
                                ]
                            },
                            {
                                "Fn::If": [
                                    "3AZCondition",
                                    {
                                        "Fn::GetAtt": [
                                            "VPCStack",
                                            "Outputs.PrivateSubnet3AID"
                                        ]
                                    },
                                    {
                                        "Ref": "AWS::NoValue"
                                    }
                                ]
                            },
                            {
                                "Fn::If": [
                                    "4AZCondition",
                                    {
                                        "Fn::GetAtt": [
                                            "VPCStack",
                                            "Outputs.PrivateSubnet4AID"
                                        ]
                                    },
                                    {
                                        "Ref": "AWS::NoValue"
                                    }
                                ]
                            }
                            ]
                        ]
                    },
                    "NumSRRHosts": {
                        "Ref": "NumSRRHosts"
                    },
                    "PublicSubnetsToSpan": {
                        "Fn::Join": [
                            ",", [{
                                "Fn::GetAtt": [
                                    "VPCStack",
                                    "Outputs.PublicSubnet1ID"
                                ]
                            },
                            {
                                "Fn::GetAtt": [
                                    "VPCStack",
                                    "Outputs.PublicSubnet2ID"
                                ]
                            },
                            {
                                "Fn::If": [
                                    "3AZCondition",
                                    {
                                        "Fn::GetAtt": [
                                            "VPCStack",
                                            "Outputs.PublicSubnet3ID"
                                        ]
                                    },
                                    {
                                        "Ref": "AWS::NoValue"
                                    }
                                ]
                            },
                            {
                                "Fn::If": [
                                    "4AZCondition",
                                    {
                                        "Fn::GetAtt": [
                                            "VPCStack",
                                            "Outputs.PublicSubnet4ID"
                                        ]
                                    },
                                    {
                                        "Ref": "AWS::NoValue"
                                    }
                                ]
                            }
                            ]
                        ]
                    },
                    "StorReduceLicense": {
                        "Ref": "StorReduceLicense"
                    }
                }
            }
        }

    },
    "Mappings": {},
    "Outputs": {
        "NetworkLoadBalancerID": {
            "Description": "Network Load Balancer ID",
            "Value": {
                "Fn::GetAtt": [
                    "SrrGroup",
                    "Outputs.NetworkLoadBalancerID"
                ]
            }
        },
        "NetworkLoadBalancerDNSName": {
            "Description": "Network Load Balancer Public DNS Name",
            "Value": {
                "Fn::GetAtt": [
                    "SrrGroup",
                    "Outputs.NetworkLoadBalancerDNSName"
                ]
            }
        },
        "StorReduceAdminUIAddress": {
            "Description": "Address for StorReduce Administration",
            "Value": {
                "Fn::GetAtt": [
                    "SrrGroup",
                    "Outputs.StorReduceAdminUIAddress"
                ]
            }
        },
        "StorReduceHTTPEndpoint": {
            "Description": "StorReduce S3 Endpoint over HTTP",
            "Value": {
                "Fn::GetAtt": [
                    "SrrGroup",
                    "Outputs.StorReduceHTTPEndpoint"
                ]
            }
        },
        "StorReduceHTTPSEndpoint": {
            "Description": "StorReduce S3 Endpoint over HTTPS",
            "Value": {
                "Fn::GetAtt": [
                    "SrrGroup",
                    "Outputs.StorReduceHTTPSEndpoint"
                ]
            }
        },
        "StorReduceMonitorGrafanaDashboardAddress": {
            "Description": "StorReduce Monitor Grafana Dashboard Address",
            "Value": {
                "Fn::GetAtt": [
                    "SrrGroup",
                    "Outputs.StorReduceMonitorGrafanaDashboardAddress"
                ]
            }
        },
        "StorReduceMonitorKibanaDashboardAddress": {
            "Description": "StorReduce Monitor Kibana Dashboard Address",
            "Value": {
                "Fn::GetAtt": [
                    "SrrGroup",
                    "Outputs.StorReduceMonitorKibanaDashboardAddress"
                ]
            }
        }
    }
}